openapi: 3.0.1
info:
  title: 'Laravel REST api'
  version: '1.0'
  description: ''
  contact:
    name: 'Way2web Software'
    url: ''
    email: ''
  license:
    name: 'Apache 2.0'
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
paths:
  /application_info:
    get:
      responses:
        200:
          description: 'Retrieves all instances of application_info'
          headers:
            x-ratelimit-limit:
              $ref: '#/components/headers/x-ratelimit-limit'
            x-ratelimit-remaining:
              $ref: '#/components/headers/x-ratelimit-remaining'
            content-language:
              $ref: '#/components/headers/accept-language'
          content:
            application/json:
              schema:
                type: array
                items:
                  title: ApplicationInfo
                  description: 'ApplicationInfo get for groups get, read'
                  type: object
                  properties: { app_name: { type: string, nullable: false }, environment: { type: string, nullable: false }, hash: { type: string, nullable: false }, debug: { type: boolean, nullable: false } }
            application/xml:
              schema:
                type: array
                items:
                  title: ApplicationInfo
                  description: 'ApplicationInfo get for groups get, read'
                  type: object
                  properties: { app_name: { type: string, nullable: false }, environment: { type: string, nullable: false }, hash: { type: string, nullable: false }, debug: { type: boolean, nullable: false } }
                  xml: { name: item }
                xml:
                  name: response
        401:
          $ref: '#/components/responses/NotAuthorized'
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/InternalError'
        502:
          $ref: '#/components/responses/ServerDependencyError'
        503:
          $ref: '#/components/responses/MaintenanceMode'
      tags:
        - application_info
      summary: 'get/search all instances of application_info'
      operationId: resourceGetAllApplicationInfo
      parameters:
        -
          name: page
          in: query
          description: 'pagination index counting from 0'
          schema:
            type: integer
            minimum: 0
        -
          name: limit
          in: query
          description: 'number of results'
          schema:
            type: integer
            minimum: 1
        -
          name: Accept-Language
          in: header
          description: language
          schema:
            type: string
            format: locale
            enum:
              - en
              - nl
              - be
  /translation: {  }
  '/translation/{id}':
    get:
      responses:
        200:
          description: 'Retrieves a single instance of translation'
          headers:
            x-ratelimit-limit:
              $ref: '#/components/headers/x-ratelimit-limit'
            x-ratelimit-remaining:
              $ref: '#/components/headers/x-ratelimit-remaining'
            content-language:
              $ref: '#/components/headers/accept-language'
          content:
            application/json:
              schema:
                title: Translation
                description: 'Translation get for groups get, read'
                type: object
                properties:
                  id: { type: string, nullable: false }
                  translation: { type: string, nullable: false }
                  locale: { type: string, format: locale, enum: [en, nl, be] }
            application/xml:
              schema:
                title: Translation
                description: 'Translation get for groups get, read'
                type: object
                properties:
                  id: { type: string, nullable: false }
                  translation: { type: string, nullable: false }
                  locale: { type: string, format: locale, enum: [en, nl, be] }
                xml:
                  name: item
        401:
          $ref: '#/components/responses/NotAuthorized'
        404:
          $ref: '#/components/responses/NotFound'
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/InternalError'
        502:
          $ref: '#/components/responses/ServerDependencyError'
        503:
          $ref: '#/components/responses/MaintenanceMode'
      tags:
        - translation
      summary: 'retrieve a single instance of translation'
      operationId: resourceGetSingleTranslation
      parameters:
        -
          name: Accept-Language
          in: header
          description: language
          schema:
            type: string
            format: locale
            enum:
              - en
              - nl
              - be
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
  '/translation/{id}/withPlaceholders':
    post:
      responses:
        200:
          description: 'Retrieves return value of withPlaceholders'
          headers:
            x-ratelimit-limit:
              $ref: '#/components/headers/x-ratelimit-limit'
            x-ratelimit-remaining:
              $ref: '#/components/headers/x-ratelimit-remaining'
            content-language:
              $ref: '#/components/headers/accept-language'
        401:
          $ref: '#/components/responses/NotAuthorized'
        404:
          $ref: '#/components/responses/NotFound'
        429:
          $ref: '#/components/responses/TooManyRequests'
        500:
          $ref: '#/components/responses/InternalError'
        502:
          $ref: '#/components/responses/ServerDependencyError'
        503:
          $ref: '#/components/responses/MaintenanceMode'
      tags:
        - translation
      operationId: resourcePostSubActionTranslationWithPlaceholders
      parameters:
        -
          name: Accept-Language
          in: header
          description: language
          schema:
            type: string
            format: locale
            enum:
              - en
              - nl
              - be
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                replace:
                  type: array
                  items: {  }
                  nullable: false
                amount:
                  type: integer
                  nullable: false
          application/xml:
            schema:
              type: object
              properties:
                replace:
                  type: array
                  items: {  }
                  nullable: false
                amount:
                  type: integer
                  nullable: false
              xml:
                name: item
        description: 'the resource as JSON to persist'
        required: true
    parameters:
      -
        name: id
        in: path
        description: 'the id of the resource'
        required: true
        schema:
          type: string
servers:
  -
    url: 'http://localhost/api'
components:
  schemas:
    Error:
      type: object
      properties:
        type:
          type: string
        message:
          type: string
        code:
          oneOf:
            -
              type: string
            -
              type: integer
        trace:
          type: string
      xml:
        name: response
  responses:
    InvalidFormat:
      description: 'The body input could not be parsed'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
    ValidationError:
      description: 'The body input was in a proper format, but the input values were not valid'
      content:
        application/json:
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              code:
                oneOf:
                  - { type: string }
                  - { type: integer }
              trace:
                type: string
              errors:
                type: object
                additionalProperties:
                  type: array
                  items: { type: string }
            xml:
              name: response
        application/xml:
          schema:
            type: object
            properties:
              type:
                type: string
              message:
                type: string
              code:
                oneOf:
                  - { type: string }
                  - { type: integer }
              trace:
                type: string
              errors:
                type: object
                additionalProperties:
                  type: array
                  items: { type: string }
            xml:
              name: response
    TooManyRequests:
      description: 'Too many requests per seconds were sent'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
    MaintenanceMode:
      description: 'App is in maintenance mode'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: 'Response when resource could not be found'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
    NotAuthorized:
      description: 'You have no permission to do this call'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
    InternalError:
      description: 'An internal error occured'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
    ServerDependencyError:
      description: 'The server required an external response which threw an error'
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
        application/xml:
          schema:
            $ref: '#/components/schemas/Error'
  headers:
    x-ratelimit-limit:
      description: 'Request limit per hour'
      schema:
        type: integer
      example: 100
    x-ratelimit-remaining:
      description: 'Request limit per hour'
      schema:
        type: integer
      example: 94
    accept-language:
      description: 'Language of response'
      schema:
        type: string
        format: locale
        enum:
          - en
          - nl
          - be
